{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/react_test2/src/pages/Home/index.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { API_GET_DATA } from '../../global/constants';\nimport Edit from \"./components/Edit\";\nimport List from \"./components/List\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialData = [{\n  num: 1,\n  name: \"John\"\n}, {\n  num: 2,\n  name: \"Jane\"\n}, {\n  num: 3,\n  name: \"Bob\"\n}];\nfunction downloadJson(jsonData, filename) {\n  const jsonStr = JSON.stringify(jsonData);\n  const blob = new Blob([jsonStr], {\n    type: \"application/json\"\n  });\n  const link = document.createElement(\"a\");\n  link.href = URL.createObjectURL(blob);\n  link.download = filename;\n  link.click();\n  URL.revokeObjectURL(link.href);\n}\nasync function uploadJsonToPinata(jsonData, num) {\n  const apiKey = 'c227e9d4a9089f9d5ca6';\n  const apiSecret = '3db65954a9a5c9471156024e35e5901c3a289a536ae9d6a5abda8691a007ce8b';\n  const url = 'https://api.pinata.cloud/pinning/pinJSONToIPFS';\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      pinata_api_key: apiKey,\n      pinata_secret_api_key: apiSecret\n    },\n    body: JSON.stringify(jsonData)\n  });\n  const result = await response.json();\n  return result;\n}\nasync function fetchData(setData) {\n  const res = await fetch(API_GET_DATA);\n  const {\n    data\n  } = await res.json();\n  setData(data);\n}\nasync function fetchSetData(data) {\n  await fetch(API_GET_DATA, {\n    method: \"PUT\",\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      data\n    })\n  });\n}\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const submittingStatus = useRef(false);\n  useEffect(() => {\n    if (!submittingStatus.current) {\n      return;\n    }\n    fetchSetData(data).then(data => submittingStatus.current = false);\n  }, [data]);\n  useEffect(() => {\n    fetchData(setData);\n  }, []);\n  useEffect(() => {\n    if (data.length > 0) {\n      downloadJson(data, \"data.json\");\n      const filename = `${data[0].num}.json`; // 使用第一条数据的 number 字段作为文件名\n      uploadJsonToPinata(data, filename).then(result => {\n        console.log('File uploaded to Pinata:', result);\n        // 处理上传成功后的操作\n      }).catch(error => {\n        console.error('Error uploading file to Pinata:', error);\n        // 处理上传失败后的操作\n      });\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Edit, {\n      add: setData,\n      submittingStatus: submittingStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      listData: data,\n      deleteData: setData,\n      submittingStatus: submittingStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"AZQ0ukrd8DJug6QUQ1FW1/SNuNk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","useRef","API_GET_DATA","Edit","List","jsxDEV","_jsxDEV","initialData","num","name","downloadJson","jsonData","filename","jsonStr","JSON","stringify","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click","revokeObjectURL","uploadJsonToPinata","apiKey","apiSecret","url","response","fetch","method","headers","pinata_api_key","pinata_secret_api_key","body","result","json","fetchData","setData","res","data","fetchSetData","Home","_s","submittingStatus","current","then","length","console","log","catch","error","className","children","add","fileName","_jsxFileName","lineNumber","columnNumber","listData","deleteData","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/react_test2/src/pages/Home/index.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { API_GET_DATA } from '../../global/constants'\nimport Edit from \"./components/Edit\";\nimport List from \"./components/List\";\nimport \"./index.css\";\n\nconst initialData = [\n    { num: 1, name: \"John\" },\n    { num: 2, name: \"Jane\" },\n    { num: 3, name: \"Bob\" }\n  ];\n\nfunction downloadJson(jsonData, filename) {\n  const jsonStr = JSON.stringify(jsonData);\n  const blob = new Blob([jsonStr], { type: \"application/json\" });\n\n  const link = document.createElement(\"a\");\n  link.href = URL.createObjectURL(blob);\n  link.download = filename;\n  link.click();\n\n  URL.revokeObjectURL(link.href);\n}\n\nasync function uploadJsonToPinata(jsonData, num) {\n    const apiKey = 'c227e9d4a9089f9d5ca6';\n    const apiSecret = '3db65954a9a5c9471156024e35e5901c3a289a536ae9d6a5abda8691a007ce8b';\n  \n    const url = 'https://api.pinata.cloud/pinning/pinJSONToIPFS';\n  \n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        pinata_api_key: apiKey,\n        pinata_secret_api_key: apiSecret,\n      },\n      body: JSON.stringify(jsonData),\n    });\n  \n    const result = await response.json();\n    return result;\n  }\n\n\nasync function fetchData(setData) {\n  const res = await fetch(API_GET_DATA)\n  const { data } = await res.json()\n  setData(data)\n}\n\nasync function fetchSetData(data) {\n  await fetch(API_GET_DATA, {\n    method: \"PUT\",\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify({ data })\n  })\n}\n\nconst Home = () => {\n  const [data, setData] = useState([]);\n  const submittingStatus = useRef(false);\n\n  useEffect(() => {\n    if (!submittingStatus.current) {\n      return\n    }\n    fetchSetData(data)\n      .then(data => submittingStatus.current = false)\n  }, [data])\n\n  useEffect(() => {\n    fetchData(setData)\n  }, [])\n\n\n  useEffect(() => {\n    if (data.length > 0) {\n      downloadJson(data, \"data.json\");\n      const filename = `${data[0].num}.json`; // 使用第一条数据的 number 字段作为文件名\n      uploadJsonToPinata(data, filename)\n        .then(result => {\n          console.log('File uploaded to Pinata:', result);\n          // 处理上传成功后的操作\n        })\n        .catch(error => {\n          console.error('Error uploading file to Pinata:', error);\n          // 处理上传失败后的操作\n        });\n    }\n  }, [data]);\n\n\n  return (\n    <div className=\"app\">\n      <Edit add={setData} submittingStatus={submittingStatus} />\n      <List listData={data} deleteData={setData} submittingStatus={submittingStatus} />\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}