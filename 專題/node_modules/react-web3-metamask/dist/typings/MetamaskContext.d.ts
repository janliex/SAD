import { ReactNode } from 'react';
import { NetworkName, SignatureProps } from './types';
import type { Signer } from 'ethers';
declare global {
    interface Window {
        ethereum: any;
    }
}
export declare enum ConnectionEnum {
    NotConnected = 0,
    Connected = 1
}
declare type ContextType = {
    connect?: () => void;
    disabled?: boolean;
    connection: ConnectionEnum;
    account: string;
    balance?: string;
    networkName?: NetworkName;
    provider?: any;
    signer?: Signer;
    getContract?: (address: string, abi: Array<any>) => any;
    connectAndGetSignature?: (personalSignText: string, callback: (params: SignatureProps | null, error?: any) => void) => void;
};
export declare const MetamaskProvider: ({ children }: {
    children: ReactNode;
}) => JSX.Element;
export declare const useMetamask: () => ContextType;
export {};
